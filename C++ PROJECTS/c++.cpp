#include <iostream>
#include <string>
using namespace std;



------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------

ЗМІННА                   РОЗМІР В БАЙТАХ                         ЗНАЧЕННЯ

char                           1               Символ ASCII

bool	                       1	           true або false

unsigned short int	           2	           від     0                   до     65 535

short int	                   2	           від     -32 768             до     32 767

unsigned long int	           4	           від     0                   до     4 294 967 295

long int	                   4	           від     -2 147 483 648      до     2 147 483 647

int (16 розрядів)	           2	           від     -32 768             до     32 767

int (32 розряди)	           4	           від     -2 147 483 648      до     2 147 483 647

unsigned int (16 розрядів)	   2	           від     0                   до     65 535

unsigned int (32 розряди)	   4	           від     0                   до     4 294 967 295

float	                       4	           від     1.2е-38             до     3.4е38

double	                       8	           від     2.2е-308            до     1.8е308

long double	                   10	           від     3.4е-4932           до     3.4е+4932


-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

Оператор	      Опис	                   Приклади


+	           Додавання	          2 + 3 = 5; 3.6 + 7.3 = 10.9

-	           Віднімання	     	  7 - 9 = -1; 6 - 1.25 = 4.75

*	           Множення	              7 * 2 = 14; 2а

/	           Ділення	              5 / 2 = 2; 15 / 4 = 3

%	           Остача від ділення	  5 % 2 = 1; 27 % 4 = 3; 8 % 4 = 0

++	           Інкремент (збільшення значення змінної на 1)	a++

--	           Декремент (зменшення значення змінної на 1)	a--

==             Порівняння             


-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------

// однострочний коментар 
/* багатострочний коментар */

-------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------
 


Ключеві слова в c++                            Приклад                                              Пояснення    

//--------------------------------------------------------------------------------------------------------------------
alignas 

//--------------------------------------------------------------------------------------------------------------------
alignof 

//--------------------------------------------------------------------------------------------------------------------
&&
//--------------------------------------------------------------------------------------------------------------------
a &=  

//--------------------------------------------------------------------------------------------------------------------
asm

//--------------------------------------------------------------------------------------------------------------------
auto x = 8.2;

//--------------------------------------------------------------------------------------------------------------------
bitand

//--------------------------------------------------------------------------------------------------------------------
bitor

//--------------------------------------------------------------------------------------------------------------------
break;      завершення роботи циклу    

//--------------------------------------------------------------------------------------------------------------------
switch (a) 
{
	case 1:
		cout << "змінна a дорівнює 1" ;
		break;
	case 2:
		cout << "змінна a дорівнює 1" ;
		break;
	case 3:
		cout << "змінна a дорівнює 1" ;
		break;
	default:
		cout << "змінна a не підходить ни під одне вище значення" ;}

//--------------------------------------------------------------------------------------------------------------------					  
catch

//--------------------------------------------------------------------------------------------------------------------
class

//--------------------------------------------------------------------------------------------------------------------
compl

//--------------------------------------------------------------------------------------------------------------------
const int a = 1;

//--------------------------------------------------------------------------------------------------------------------
constexpr 

//--------------------------------------------------------------------------------------------------------------------
const_cast

//--------------------------------------------------------------------------------------------------------------------
continue;     виходить з циклу
//--------------------------------------------------------------------------------------------------------------------
delete

//--------------------------------------------------------------------------------------------------------------------
do
{
	cout<< "At first do somethink without while" << endl;
}
while ("Go to cycle while");

//--------------------------------------------------------------------------------------------------------------------
dynamic_cast

//--------------------------------------------------------------------------------------------------------------------
if (a == b)
	{cout << a;}
		else {cout << b;}

//--------------------------------------------------------------------------------------------------------------------
enum

//--------------------------------------------------------------------------------------------------------------------

explicit
//--------------------------------------------------------------------------------------------------------------------
export
//--------------------------------------------------------------------------------------------------------------------
extern
//---------------------------------------------------------------------------------------------------------------------

for (int i=10; i<10; ++i)
//---------------------------------------------------------------------------------------------------------------------
friend
//---------------------------------------------------------------------------------------------------------------------
goto here;
here:
//---------------------------------------------------------------------------------------------------------------------
if (a == b)
	{
		cout << "a is equal to b"
	}
//---------------------------------------------------------------------------------------------------------------------
inline
//---------------------------------------------------------------------------------------------------------------------
mutable	namespace
//---------------------------------------------------------------------------------------------------------------------
new
//---------------------------------------------------------------------------------------------------------------------
noexcept (C++11)
//---------------------------------------------------------------------------------------------------------------------
not
//---------------------------------------------------------------------------------------------------------------------
not_eq
//---------------------------------------------------------------------------------------------------------------------
nullptr (C++11)
//---------------------------------------------------------------------------------------------------------------------
operator
//---------------------------------------------------------------------------------------------------------------------
or
//---------------------------------------------------------------------------------------------------------------------
or_eq
//---------------------------------------------------------------------------------------------------------------------
private
//---------------------------------------------------------------------------------------------------------------------
protected
//---------------------------------------------------------------------------------------------------------------------
public
//---------------------------------------------------------------------------------------------------------------------
register
//---------------------------------------------------------------------------------------------------------------------
reinterpret_cast
//---------------------------------------------------------------------------------------------------------------------
return
//---------------------------------------------------------------------------------------------------------------------
signed
//---------------------------------------------------------------------------------------------------------------------
sizeof
//---------------------------------------------------------------------------------------------------------------------
static          змінну буде видно лише в її власному файлі
//---------------------------------------------------------------------------------------------------------------------
static_assert (C++11)
//---------------------------------------------------------------------------------------------------------------------
static_cast	struct
//---------------------------------------------------------------------------------------------------------------------
template <typename T>
T Sum(T a, T b)
{
	return a+b;
}
//---------------------------------------------------------------------------------------------------------------------
this
//---------------------------------------------------------------------------------------------------------------------
thread_local (C++11)
//---------------------------------------------------------------------------------------------------------------------
throw
//---------------------------------------------------------------------------------------------------------------------
try
//---------------------------------------------------------------------------------------------------------------------
typedef
//---------------------------------------------------------------------------------------------------------------------
typeid
//---------------------------------------------------------------------------------------------------------------------
typename
//---------------------------------------------------------------------------------------------------------------------
union
//---------------------------------------------------------------------------------------------------------------------
unsigned
//---------------------------------------------------------------------------------------------------------------------
using
//---------------------------------------------------------------------------------------------------------------------
virtual
//---------------------------------------------------------------------------------------------------------------------
void
//---------------------------------------------------------------------------------------------------------------------
volatile
//---------------------------------------------------------------------------------------------------------------------
wchar_t
-----------------------------------------------------------------------------------------------------------------------
while (a == b)  
{
	cout << "Змінна a дорівнює b" ;
}
//---------------------------------------------------------------------------------------------------------------------
xor
//---------------------------------------------------------------------------------------------------------------------
xor_eq
//---------------------------------------------------------------------------------------------------------------------
